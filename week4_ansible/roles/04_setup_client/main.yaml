# See https://github.com/jamespjh/EngineeringForDataAnalysisExamples/blob/main/ansible/hc_headnode.yml
################################################################################
# admin
################################################################################
- name: Include Variable File
  ansible.builtin.include_vars:
  name: variables.yaml

################################################################################
# Filestore - Somewhere to store the data
################################################################################
# On Client machines, there is a /dev/nvme1n1 that actually has space
# need to format this before use
- name: "format the volume as {{ mount_fstype }}"
  community.general.filesystem:
    dev: "{{ mount_volume }}"
    fstype: "{{ mount_fstype }}"
  become: true

# Now, we need to be able to access /dev/nvme1n1 directly from our file system
# So mount to to somewhere sensible
- name: create a mount point for the data volume
  ansible.builtin.file:
    path: "/home/{{ user }}/{{ week4_data }}/"
    state: directory
    mode: '0755' 
- name: mount the filesystem
  become: true
  ansible.posix.mount:
    name: data
    src: "{{ mount_volume }}"
    fstype: "{{ mount_fstype }}"
    state: mounted 
  become: true
- name: change the owner back to ec2-user after mounting
  become: true
  ansible.builtin.file:
    path: "/home/{{ user }}/{{ week4_data }}/"
    state: directory
    mode: u+rwx,a+x
    owner: "{{ user }}"

# Oh at the same time, we should install stuff we need
- name: Install packages
  become: true
  ansible.builtin.dnf:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - python
    - python-pip
    - unzip
    - wget
    - httpd

################################################################################
# WebServer - So your slaves can fetch the data
################################################################################
- name: "Set up the web server to serve from ~/{{ week4_data }}/"
  become: true
  ansible.builtin.copy:
    src: cluster_apache.conf
    dest: /etc/httpd/conf.d/data.conf
- name: "Allow apache to view files in ~/{{ week4_data }}/"
  become: true
  community.general.sefcontext:
    target: "/home/{{ user }}/{{ week4_data }}/"
    setype: httpd_sys_content_t
    state: present
- name: Start service httpd
  become: true
  ansible.builtin.service:
    name: httpd
    state: restarted
